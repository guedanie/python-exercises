x = 123

x = x + 1

return x

# The = is not an equal sign, it is an assignment operator that allows us to store new information into variables

# If we wanted to evaluate whether two values are equal, then you use the '=='

print(True == False)

print(True != False)

# It is worth noting that Python doesn't have an upperam when it comes to expressions. Meaning that we will return very high numbers, regardless of the sase. 
# There is also no limit to what size of the value can be stored in a variable. Meaning that the size of the number is not a limiting factor to being stored in a variable. 

## Stings
# A string of characters that a strung together
# We can use single qoute '' or double quotes "" to create a string\
# Backlash can help you create an 'escape' character, which allows you to add single quotes between a string creation

'Isn\'t it a wonderful day?'

#Backlash can also be used with a combination of other characters to create special meanings. 

'Isn\'t a wonderful \nday'
#This shows that anything after \n will be add in a new line. 

##String Formatting

name = 'World'

print("Hello, " + %s!) (name)

#Modern Way is:

'Hello, {}!' .format(name)

# or

f'Hello, {name}!'


#String Methods

#String objects have a bunch of useful methods that can be used to perform common text manipulation tasks. We will take a look at the most common ones here:

#.lower and .upper: convert the string to all lower or upper case
#.strip: remove any leading and trailing whitespace from the string
#.isdigit: test whether or not the string is a number
#.split: convert a string to a list
#.join: convert a list to a string

# list

# Enclosed by []

list = [1,2,3,4,5,6,7]

